{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ExpensesFilter","value","selected","onChange","e","onGetMyYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","console","log","point","ExpensesChart","chartPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","expenseItem","filter","myFilteredExpenses","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onGetExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","myExpenseData","expenseDataLength","onAddNewExpense","alert","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.632804f3.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    const classes = \" card \" + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date} />\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props) {\r\n    if (props.expenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n    }\r\n    else {\r\n        return (\r\n            <ul className=\"expenses-list\">\r\n                {props.expenses.map((expense) => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const saveYearHandler = (e) => {\r\n        props.onGetMyYear(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={saveYearHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div\r\n                    className=\"chart-bar__fill\"\r\n                    style={{ height: barFillHeight }}>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    console.log(\"Maximo: \" + totalMaximum);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((point) =>\r\n                <ChartBar\r\n                    key={point.label}\r\n                    value={point.value}\r\n                    maxValue={totalMaximum}\r\n                    label={point.label}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.expenseItem.filter(myFilteredExpenses => {\r\n        return myFilteredExpenses.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onGetMyYear={filterChangeHandler}\r\n                />\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList expenses={filteredExpenses} />\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value);\r\n    };\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value);\r\n    };\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onGetExpenseData(expenseData);\r\n\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                        min=\"0.01\"\r\n                        step=\"0.01\" />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                        min=\"2019-01-01\"\r\n                        max=\"2022-12-31\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add expense</button>\r\n            </div>\r\n        </form >\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const getExpenseData = (myExpenseData) => {\r\n        const expenseData = {\r\n            ...myExpenseData,\r\n            id: \"e5\",\r\n        };\r\n        const expenseDataLength = expenseData.length;\r\n        props.onAddNewExpense(expenseData);\r\n\r\n        if (expenseDataLength === expenseData.length) {\r\n            alert(\"You can't add an empty expense 😞\");\r\n        }\r\n        else {\r\n            setIsEditing(false);\r\n        }\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing &&\r\n                <button onClick={startEditingHandler}>Add new expense</button>\r\n            }\r\n\r\n            {isEditing &&\r\n                <ExpenseForm\r\n                    onGetExpenseData={getExpenseData}\r\n                    onCancel={stopEditingHandler}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2020, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 8, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: 'e5',\n    title: 'iPhone',\n    amount: 999,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: 'e5',\n    title: 'iPhone',\n    amount: 999,\n    date: new Date(2019, 9, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addNewExpenseHandler = (myExpenseData) => {\n    setExpenses(prevExpenses => {\n      return [myExpenseData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addNewExpenseHandler} />\n      <Expenses expenseItem={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}